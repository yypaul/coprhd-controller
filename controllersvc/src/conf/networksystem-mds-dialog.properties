# Prompts
SSHPrompt.GREATER_THAN=>\\s*
SSHPrompt.MDS_CONFIG=<<devname>>\\s*\\(config\\)\\s*\# +
SSHPrompt.MDS_CONFIG_ZONE=<<devname>>\\s*\\(config-zone\\)\\s*\# +
SSHPrompt.MDS_CONFIG_ZONESET=<<devname>>\\s*\\(config-zoneset\\)\\s*\# +
SSHPrompt.MDS_CONFIG_IVR_ZONE=<<devname>>\\s*\\(config-ivr-zone\\)\\s*\# +
SSHPrompt.MDS_CONFIG_IVR_ZONESET=<<devname>>\\s*\\(config-ivr-zoneset\\)\\s*\# +
SSHPrompt.MDS_CONTINUE_QUERY=Do you want to continue?.*
SSHPrompt.MDS_ENABLE=^[^\\[]\\S+\#(?\!\#) +
SSHPrompt.MDS_GREATER_THAN=<<devname>>>\\s*
SSHPrompt.MDS_NESTED_CONFIG=[-0-9A-Za-z_]+\\s*\\(config-\\S+\\)\\s*\#
SSHPrompt.MDS_POUND=<<devname>>\#\\s*
SSHPrompt.POUND=\#\\s*
SSHPrompt.MDS_CONFIG_DEVICE_ALIAS=<<devname>>\\s*\\(config-device-alias-db\\)\\s*# +

# Commands and match expressions
MDSDialog.checkForEnhancedZoneSession.busy=Lock is currently busy
MDSDialog.checkForEnhancedZoneSession.created=Enhanced zone session has been created
MDSDialog.checkForEnhancedZoneSession.pending=there is a pending action

MDSDialog.config.configterminal.cmd=config terminal\n
MDSDialog.copyRunningConfigToStartup.cmd=copy running-config startup-config\n
MDSDialog.copyRunningConfigToStartupFabric.100Percent.match=.*100%.*
MDSDialog.copyRunningConfigToStartupFabric.cmd=copy running-config startup-config fabric\n
MDSDialog.copyRunningConfigToStartupFabric.y.cmd=y\n
MDSDialog.endConfig.end.cmd=end\n
MDSDialog.exitToConfig.exit.cmd=exit\n
MDSDialog.getVsanWwns.Runningfabricname.match=.*Running fabric name:\\s+(
MDSDialog.getVsanWwns.Runningfabricname2.match=).*
MDSDialog.getVsanWwns.showfcdomain.cmd=show fcdomain
MDSDialog.getVsanWwns.VSAN.match=\\s*VSAN\\s+(\\d+).*
MDSDialog.getVsanWwns.vsan.cmd=\ vsan 
MDSDialog.initalize.match=\\s*([-._A-Za-z0-9]+)
MDSDialog.initialize.termlength.cmd=terminal length 0\n
MDSDialog.isSessionInProgress.enhanced=enhanced
MDSDialog.isSessionInProgress.mode.match=\\s*mode:\\s+(\\w+).*
MDSDialog.isSessionInProgress.none=none
MDSDialog.isSessionInProgress.session.match=\\s*session:\\s+(\\w+).*
MDSDialog.isSessionInProgress.showzonestatus.cmd=show zone status vsan {0}\n
MDSDialog.noZoneCommit.nozonecommitvsan.cmd=no zone commit vsan {0}\n
MDSDialog.showFcnsDatabase.cmd=show fcns database detail
MDSDialog.showFcnsDatabase.ConnectedInterface.match=Connected Interface[^:]+:((fc\\S+)|(\\s*Virtual Device\\s*))
MDSDialog.showFcnsDatabase.fabricportwwn.match=fabric-port-wwn[^:]+:([0-9a-fA-F:]+).*
MDSDialog.showFcnsDatabase.nodewwn.match=node-wwn[^:]+:([0-9a-fA-F:]+).*
MDSDialog.showFcnsDatabase.portwwn.match=port-wwn[^:]+:([0-9a-fA-F:]+).*
MDSDialog.showFcnsDatabase.SwitchName.match=Switch Name[^:]+:(.*)
MDSDialog.showFcnsDatabase.vsan.cmd=\ vsan 
MDSDialog.showFcnsDatabase.VSAN.match=VSAN:(\\d+)\\s+FCID:(0x[0-9a-fA-F:]+)\\s*
MDSDialog.showFlogiDatabase.cmd=show flogi database\n
MDSDialog.showFlogiDatabase.interfacename.match=(fc\\S+)\\s+(\\d+)\\s+(\\S+)\\s+([0-9a-fA-F:]+)\\s+([0-9a-fA-F:]+)\\s*
MDSDialog.showFlogiDatabase.INTERFACEVSANFCID.match=INTERFACE\\s+VSAN\\s+FCID\\s+PORT NAME\\s+NODE NAME\\s*
MDSDialog.showFlogiDatabase.Totalflogi.match=Total number of flogi.*
MDSDialog.showInterface.cmd=show interface\n
MDSDialog.showInterface.interfacename.match=(fc\\d+/\\d+) is (\\S+).*
MDSDialog.showInterface.Portdescription.match=\\s+Port description is (.*)
MDSDialog.showInterface.Portmode.match=\\s+Port mode is (\\w*)\\s*
MDSDialog.showInterface.PortmodeFCID.match=\\s+Port mode is (\\w*), FCID is (0x\\p{XDigit}+)\\s*
MDSDialog.showInterface.Portvsan.match=\\s+Port vsan is (\\d+)\\s*
MDSDialog.showInterface.PortWWN.match=\\s+Port WWN is ([0-9a-fA-F:]+)\\s*
MDSDialog.showSystem.systemUptime.cmd=show system uptime\n
MDSDialog.showSystem.systemUptime.match=System uptime:\\s+(.*)
MDSDialog.showVersion.cmd=show version\n
MDSDialog.showVersion.MDS.match=.*[Cc][Ii][Ss][Cc][Oo]\\s+(MDS\\s+\\S+).*
MDSDialog.showVersion.Nexus.match=.*[Cc][Ii][Ss][Cc][Oo]\\s+(Nexus\\S+).*
MDSDialog.showVersion.version.match=.*system:\\s+version +(\\S+).*
MDSDialog.showVsan.cmd=show vsan\n
MDSDialog.showVsan.namestate.match=\\s+name:\\s*(\\w+|\\w[\\w\\s]*[\\w\\-]*)\\s+state:(\\w+).*
MDSDialog.showVsan.vsan.match=vsan\\s+(\\d+).*
MDSDialog.showZoneset.not.configured=not configured
MDSDialog.showZoneset.cmd=show zoneset vsan 
MDSDialog.showZoneset.pwwn.match=\\s*pwwn\\s+([0-9a-fA-F:]+)\\s*(\\[\\S+\\])?\\s*(\\w*)
MDSDialog.showZoneset.deviceAlias.match=\\s*device-alias \\s*(\\S+)\\s*(\\w*)
MDSDialog.showZoneset.showzonesetactivevsan.cmd=show zoneset active vsan 
MDSDialog.showZoneset.zonename.match=\\s*zone name ([-\\w]+) vsan (\\d+).*
MDSDialog.showZoneset.zonename2.match=\\s*zone name ([-\\w]+) vsan (\\d+).*
MDSDialog.showZoneset.zonesetname.match=\\s*zoneset name ([-\\w]+) vsan (\\d+).*
MDSDialog.showZoneset.zonesetname2.match=\\s*zoneset name ([-\\w]+) vsan (\\d+).*
MDSDialog.showFabricZones.cmd=show zone vsan 
MDSDialog.waitForZoneCommit.complete.match=^Status:\\s+Commit complete.*
MDSDialog.waitForZoneCommit.failed.match=^Status:\\s+Operation failed.*
MDSDialog.waitForZoneCommit.inprogress.match=^Status:\\s+Commit in progress.*
MDSDialog.waitForZoneCommit.showzonestatusvsan.cmd=show zone status vsan {0}\n
MDSDialog.zoneCommit.zonecommitvsan.cmd=zone commit vsan {0}\n
MDSDialog.zoneMemberPwwn.cmd=member pwwn {0}\n
MDSDialog.zoneNameVsan.cmd={2}zone name {0} vsan {1}\n
MDSDialog.zoneNameVsan.no.cmd=no 
MDSDialog.zoneRename.cmd=zone rename {0} {1} vsan {2}\n
MDSDialog.zoneName.non.existing=non existing
MDSDialog.zoneName.already.in.use=already in use

MDSDialog.showZone.pwwn.cmd=show zone member pwwn {0} vsan {1}\n
MDSDialog.showZone.pwwn.active.cmd=show zone member pwwn {0} active vsan {1}\n
MDSDialog.showZone.name.cmd=show zone name {0}\n
MDSDialog.zoneName.match=\\s*zone\\s+([-\\w]+)

MDSDialog.zonesetActivate.cmd={2}zoneset activate name {0} vsan {1}\n
MDSDialog.zonesetActivate.no.cmd=no 
MDSDialog.zonesetMember.no.cmd=no 
MDSDialog.zonesetMember.member.cmd={1} member {0}\n
MDSDialog.zonesetNameVsan.no.cmd=no
MDSDialog.zonesetNameVsan.cmd= {2} zoneset name {0} vsan {1}\n
MDSDialog.zonesetActivate.continue.y.cmd=y\n
MDSDialog.zonesetActivate.no.zone.members=do not have members
MDSDialog.zonesetClone.cmd=zoneset clone {0} {1} vsan {2}\n
MDSDialog.zonesetClone.invalidname.cmd=String exceeded max length of (64)

MDSDialog.show.wwn.switch.cmd=show wwn switch\n
MDSDialog.show.wwn.switch.match=\\s*Switch WWN is ([0-9a-fA-F:]+)\\s*

MDSDialog.show.topology.cmd=show topology\n
MDSDialog.show.topology.peer.ip.match=.*\\s+(([0-9]{1,3}\\.){3})([0-9]{1,3}).*
MDSDialog.show.topology.vsan.match=FC Topology for VSAN\\s+(\\d+).*

#
# IVR commands
#
MDSDialog.ivr.enabled=Inter-VSAN Routing is enabled
MDSDialog.ivr.distribute.enabled=fabric distribution enabled
MDSDialog.ivr.auto.topology.enabled=Current Status: Inter-VSAN topology is ACTIVE

MDSDialog.ivr.waitForZoneset.activate.inprogress.match=\\s*state\\s*:\\s*activating*
MDSDialog.ivr.waitForZoneset.activate.success.match=\\s*state\\s*:\\s*activation success*
MDSDialog.ivr.waitForZoneset.activate.error.atLeast2Members=zones in the zoneset must contain at least two members

MDSDialog.ivr.showZoneset.zoneset.name.match=\\s*zoneset name ([-\\w]+)
MDSDialog.ivr.showZoneset.zone.name.match=\\s*zone name ([-\\w]+)
MDSDialog.ivr.showZoneset.zone.member.match=\\s*pwwn\\s+(([0-9a-fA-F]{2}:){7}([0-9a-fA-F]{2}))\\s+vsan\\s+(\\d+).*
MDSDialog.ivr.showTopology.wwn.match=\\s*\\d*\\s*(([0-9a-fA-F]{2}:){7})([0-9a-fA-F]{2})\\s+(\\*{0,1})\\s+\\D*(\\d*)(\\s*[,-]{0,1}\\d*)*
MDSDialog.ivr.showTopology.vsans.match=\\s*\\D*(\d+)\s*[,-]/g
MDSDialog.ivr.zone.not.found=inter-VSAN zone not found
MDSDialog.ivr.checkForEnhancedZoneSession.created=fabric is now locked for configuration.
MDSDialog.ivr.checkForEnhancedZoneSession.busy=fabric is already locked.
MDSDialog.ivr.checkForEnhancedZoneSession.pending=there is a pending action.

MDSDialog.ivr.show.cmd=show ivr\n
MDSDialog.ivr.show.zone.cmd=show ivr zone\n
MDSDialog.ivr.show.zoneName.cmd=show ivr zone name {0}\n
MDSDialog.ivr.show.zone.active.cmd=show ivr zone active\n
MDSDialog.ivr.show.zoneset.cmd=show ivr zoneset\n
MDSDialog.ivr.show.zonesetName.cmd=show ivr zoneset name {0}\n
MDSDialog.ivr.show.zoneset.active.cmd=show ivr zoneset active\n
MDSDialog.ivr.show.zoneset.status.cmd=show ivr zoneset status\n

MDSDialog.ivr.commit.cmd=ivr commit\n
MDSDialog.ivr.abort.cmd=ivr abort\n

MDSDialog.ivr.zoneName.cmd=ivr zone name {0}\n

MDSDialog.ivr.zonesetName.cmd=ivr zoneset name {0}\n
MDSDialog.ivr.zonesetName.activate.cmd= ivr zoneset activate name {0}\n

MDSDialog.ivr.zoneMember.cmd=member pwwn {0} vsan {1}\n
MDSDialog.ivr.zonesetMember.cmd=member {0}\n

MDSDialog.ivr.vsan.topology.cmd=show ivr vsan-topology active\n

#
# Device Alias configuration
#
MDSDialog.showDeviceAlias.cmd=show device-alias database\n
MDSDialog.showDeviceAlias.pending.cmd=show device-alias pending\n
MDSDialog.config.deviceAlias.cmd=device-alias database\n
MDSDialog.config.deviceAlias.commit.cmd=device-alias commit\n
MDSDialog.config.deviceAlias.abort.cmd=device-alias abort\n
MDSDialog.config.deviceAliasName.cmd=device-alias name {0} pwwn {1}\n
MDSDialog.config.deviceAliasRename.cmd=device-alias rename {0} {1}\n

MDSDialog.deviceAliasName.match=device-alias name\\s+(\\S+)\\s+pwwn\\s+(\\S+)\\s*
MDSDialog.showFcnsDatabase.deviceAlias.match=\\s*\\[(\\S+)\\]\\s*
MDSDialog.zoneMemberAlias.cmd=member device-alias {0}\n
MDSDialog.not.present=not present
MDSDialog.not.existing=non existing
MDSDialog.already.present=already present
MDSDialog.already.in.use=already in use
MDSDialog.deviceAlias.illegal.name=Illegal
MDSDialog.deviceAlias.busy=busy
MDSDialog.deviceAlias.locked=locked

MDSDialog.invalidCommand=Invalid command

# Regex identifies and exception in the MDS response.
MDSDialog.exception.regex=raise Exception\\('.*'\\)
